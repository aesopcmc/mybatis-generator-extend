<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.aesop.example.generator.mapper.TransitionChangeRecordMapper">
  <resultMap id="BaseResultMap" type="cn.aesop.example.generator.model.TransitionChangeRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="issue_id" jdbcType="BIGINT" property="issueId" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="operate_type" jdbcType="TINYINT" property="operateType" />
    <result column="from_status_name" jdbcType="VARCHAR" property="fromStatusName" />
    <result column="to_status_name" jdbcType="VARCHAR" property="toStatusName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.aesop.example.generator.model.TransitionChangeRecord">
    <result column="data" jdbcType="LONGVARCHAR" property="data" />
    <result column="form_elements" jdbcType="LONGVARCHAR" property="formElements" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, issue_id, create_user, create_time, update_user, update_time, group_id, operate_type, 
    from_status_name, to_status_name
  </sql>
  <sql id="Blob_Column_List">
    `data`, form_elements
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.aesop.example.generator.model.TransitionChangeRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `transition_change_record`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.aesop.example.generator.model.TransitionChangeRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from `transition_change_record`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `transition_change_record`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `transition_change_record`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.aesop.example.generator.model.TransitionChangeRecordExample">
    delete from `transition_change_record`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.aesop.example.generator.model.TransitionChangeRecord" useGeneratedKeys="true">
    insert into `transition_change_record` (issue_id, create_user, create_time, 
      update_user, update_time, group_id, 
      operate_type, from_status_name, to_status_name, 
      `data`, form_elements)
    values (#{issueId,jdbcType=BIGINT}, #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{groupId,jdbcType=INTEGER}, 
      #{operateType,jdbcType=TINYINT}, #{fromStatusName,jdbcType=VARCHAR}, #{toStatusName,jdbcType=VARCHAR}, 
      #{data,jdbcType=LONGVARCHAR}, #{formElements,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.aesop.example.generator.model.TransitionChangeRecord" useGeneratedKeys="true">
    insert into `transition_change_record`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="issueId != null">
        issue_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="operateType != null">
        operate_type,
      </if>
      <if test="fromStatusName != null">
        from_status_name,
      </if>
      <if test="toStatusName != null">
        to_status_name,
      </if>
      <if test="data != null">
        `data`,
      </if>
      <if test="formElements != null">
        form_elements,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="issueId != null">
        #{issueId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="operateType != null">
        #{operateType,jdbcType=TINYINT},
      </if>
      <if test="fromStatusName != null">
        #{fromStatusName,jdbcType=VARCHAR},
      </if>
      <if test="toStatusName != null">
        #{toStatusName,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARCHAR},
      </if>
      <if test="formElements != null">
        #{formElements,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.aesop.example.generator.model.TransitionChangeRecordExample" resultType="java.lang.Long">
    select count(*) from `transition_change_record`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `transition_change_record`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.issueId != null">
        issue_id = #{record.issueId,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.operateType != null">
        operate_type = #{record.operateType,jdbcType=TINYINT},
      </if>
      <if test="record.fromStatusName != null">
        from_status_name = #{record.fromStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.toStatusName != null">
        to_status_name = #{record.toStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.data != null">
        `data` = #{record.data,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.formElements != null">
        form_elements = #{record.formElements,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update `transition_change_record`
    set id = #{record.id,jdbcType=BIGINT},
      issue_id = #{record.issueId,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      group_id = #{record.groupId,jdbcType=INTEGER},
      operate_type = #{record.operateType,jdbcType=TINYINT},
      from_status_name = #{record.fromStatusName,jdbcType=VARCHAR},
      to_status_name = #{record.toStatusName,jdbcType=VARCHAR},
      `data` = #{record.data,jdbcType=LONGVARCHAR},
      form_elements = #{record.formElements,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `transition_change_record`
    set id = #{record.id,jdbcType=BIGINT},
      issue_id = #{record.issueId,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      group_id = #{record.groupId,jdbcType=INTEGER},
      operate_type = #{record.operateType,jdbcType=TINYINT},
      from_status_name = #{record.fromStatusName,jdbcType=VARCHAR},
      to_status_name = #{record.toStatusName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.aesop.example.generator.model.TransitionChangeRecord">
    update `transition_change_record`
    <set>
      <if test="issueId != null">
        issue_id = #{issueId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="operateType != null">
        operate_type = #{operateType,jdbcType=TINYINT},
      </if>
      <if test="fromStatusName != null">
        from_status_name = #{fromStatusName,jdbcType=VARCHAR},
      </if>
      <if test="toStatusName != null">
        to_status_name = #{toStatusName,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        `data` = #{data,jdbcType=LONGVARCHAR},
      </if>
      <if test="formElements != null">
        form_elements = #{formElements,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.aesop.example.generator.model.TransitionChangeRecord">
    update `transition_change_record`
    set issue_id = #{issueId,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      group_id = #{groupId,jdbcType=INTEGER},
      operate_type = #{operateType,jdbcType=TINYINT},
      from_status_name = #{fromStatusName,jdbcType=VARCHAR},
      to_status_name = #{toStatusName,jdbcType=VARCHAR},
      `data` = #{data,jdbcType=LONGVARCHAR},
      form_elements = #{formElements,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.aesop.example.generator.model.TransitionChangeRecord">
    update `transition_change_record`
    set issue_id = #{issueId,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      group_id = #{groupId,jdbcType=INTEGER},
      operate_type = #{operateType,jdbcType=TINYINT},
      from_status_name = #{fromStatusName,jdbcType=VARCHAR},
      to_status_name = #{toStatusName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>