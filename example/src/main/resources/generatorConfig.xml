<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 官方配置文档 http://mybatis.org/generator/configreference/xmlconfig.html -->
    <!--DynamicSql语法 http://mybatis.org/generator/generatedobjects/dynamicSqlV2.html-->

    <properties resource="generatorConfig.properties" />

    <context id="DB2Tables" targetRuntime="MyBatis3DynamicSqlV2" defaultModelType="flat">
        <!--
             自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
            一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
            beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号；
        -->
        <property name="autoDelimitKeywords" value="true"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!--自定义插件-->
        <!--生成自定义Dao、xml-->
        <plugin type="cn.aesop.extend.plugin.AddExtendDaoPlugin">
            <property name="baseDir" value="${plugin.base.dir}"/>
            <property name="targetPackage" value="${plugin.dao.package}"/>
        </plugin>
        <!--实体类使用Lombok 简化getter/setter代码-->
        <plugin type="cn.aesop.extend.plugin.UseLombokPlugin" />

        <!--自动生成实体和mapper-->
        <commentGenerator type="cn.aesop.extend.comment.MySQLCommentGenerator">
            <property name="suppressDate" value="true"/>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <!--<property name="suppressAllComments" value="true"/>-->
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <!-- 数据库链接URL，用户名、密码  -->
        <jdbcConnection
                driverClass="${mybatis.generator.jdbcDriver}"
                connectionURL="${mybatis.generator.jdbcURL}"
                userId="${mybatis.generator.jdbcUserId}"
                password="${mybatis.generator.jdbcPassword}">
            <!--设置为true 才能显示类注释-->
            <property name="useInformationSchema" value="true" />
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
            <!-- 当useJSR310Types为true时，就会jdbc对应的日期类型会转成java8中的LocateDateTime类型，如果useJSR310Types为false，则还是转成java.utils.Date类型 -->
            <property name="useJSR310Types" value="true"/>
        </javaTypeResolver>

        <!-- 生成模型的包名和位置 targetProject='MAVEN' 表示生成到target目录 targetProject="src/main/java"-->
        <javaModelGenerator targetPackage="${model.package}" targetProject="src/main/java">
            <!--<property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>-->
        </javaModelGenerator>

        <!-- 生成映射文件xml 的包名和位置 -->
        <sqlMapGenerator targetPackage="${mapper.package}" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成DAO的包名和位置 -->
        <!--
        客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
            type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
            type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
            type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${mapper.package}" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 数据库表名 -->

        <table tableName="admin_user">
            <!--可选，指定继承的类-->
            <property name="rootClass" value="cn.aesop.example.AbstractEntity"/>
            <!--可选，可序列化-->
            <property name="isSerializable" value="true"/>
            <!--可选，表示在插入时后，返回主键-->
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
            <!--可选，自定义枚举-->
            <columnOverride column="delete_flag" javaType="cn.aesop.example.enums.DeleteFlagEnum"/>
        </table>

        <table tableName="admin_role">

        </table>

    </context>
</generatorConfiguration>